[buildout]
extends =
    http://good-py.appspot.com/release/dexterity/1.0-next?plone=4.0rc1

extensions =
    mr.developer
    buildout.dumppickedversions

unzip = true
versions = versions
develop =
sources = sources

parts =
    instance
    zopepy
    lxml
    omelette
    test
    xmltest
    coverage

auto-checkout =
    plone.app.tinymce

    plone.formwidget.layout
    plone.formwidget.contenttree
    plone.formwidget.querystring
    plone.app.layoutbehavior
    plone.app.deco

    plone.registry
    plone.app.registry

    plone.app.contentlisting
    plone.app.drafts

    plone.tiles
    plone.directives.tiles
    plone.app.tiles
    plone.app.standardtiles

    plone.app.page

    repoze.xmliter
    plone.transformchain
    plone.app.blocks

    plone.testing
    plone.app.testing

    example.deco
    plone.app.collection

    plonetheme.wireframe

    plone.app.controlpanel
    plone.app.content
    plone.app.contentrules

always-checkout = force

[versions]
collective.autopermission = 1.0b1
collective.recipe.omelette = 0.9
collective.recipe.template = 1.8
collective.xmltestreport = 1.0b3
interlude = 1.0
lxml = 2.2.6
mr.developer = 1.15
plone.app.discussion = 1.0b6
plone.autoform = 1.0b4
unittest2 = 0.5.1
z3c.recipe.staticlxml = 0.7.2
zc.recipe.cmmi = 1.3.2


[instance]
recipe = plone.recipe.zope2instance
blob-storage = ${buildout:directory}/var/blobstorage
user = admin:admin
http-address = 8080
webdav-address = 8081
debug-mode = on
verbose-security = on
eggs =
    plone.app.page
    plone.app.contentlisting
    plone.formwidget.querystring
    plone.app.collection
    plone.app.discussion
    example.deco
    plonetheme.wireframe
    plone.reload

zcml =
    plone.app.page
    plone.app.collection
    example.deco
    plonetheme.wireframe

[sources]
plone.app.tinymce                 = svn https://svn.plone.org/svn/plone/sandbox/plone.app.tinymce/trunk

plone.formwidget.layout           = svn https://svn.plone.org/svn/plone/sandbox/plone.formwidget.layout/trunk
plone.formwidget.contenttree      = svn https://svn.plone.org/svn/plone/plone.formwidget.contenttree/trunk
plone.formwidget.querystring      = svn https://svn.plone.org/svn/plone/plone.formwidget.querystring/trunk/
plone.app.layoutbehavior          = svn https://svn.plone.org/svn/plone/sandbox/plone.app.layoutbehavior/trunk
plone.app.deco                    = svn https://svn.plone.org/svn/plone/sandbox/plone.app.deco/trunk

plone.registry                    = svn https://svn.plone.org/svn/plone/plone.registry/trunk
plone.app.registry                = svn https://svn.plone.org/svn/plone/plone.app.registry/trunk

plone.app.drafts                  = svn https://svn.plone.org/svn/plone/plone.app.drafts/trunk

plone.tiles                       = svn https://svn.plone.org/svn/plone/plone.tiles/trunk
plone.directives.tiles            = svn https://svn.plone.org/svn/plone/plone.directives.tiles/trunk
plone.app.tiles                   = svn https://svn.plone.org/svn/plone/plone.app.tiles/trunk
plone.app.contentlisting          = svn https://svn.plone.org/svn/plone/plone.app.contentlisting/trunk/
plone.app.standardtiles           = svn https://svn.plone.org/svn/plone/sandbox/plone.app.standardtiles/trunk

plone.app.page                    = svn https://svn.plone.org/svn/plone/sandbox/plone.app.page/trunk

repoze.xmliter                    = svn http://svn.repoze.org/repoze.xmliter/trunk
plone.transformchain              = svn https://svn.plone.org/svn/plone/plone.transformchain/trunk
plone.app.blocks                  = svn https://svn.plone.org/svn/plone/plone.app.blocks/trunk

plone.testing                     = svn https://svn.plone.org/svn/plone/plone.testing/trunk
plone.app.testing                 = svn https://svn.plone.org/svn/plone/plone.app.testing/trunk

example.deco                      = svn https://svn.plone.org/svn/collective/example.deco/trunk
plone.app.collection              = svn https://svn.plone.org/svn/plone/plone.app.collection/trunk

plonetheme.wireframe              = svn https://svn.plone.org/svn/plone/sandbox/plonetheme.wireframe/trunk

plone.dexterity                   = svn https://svn.plone.org/svn/plone/plone.dexterity/trunk/
plone.app.dexterity               = svn https://svn.plone.org/svn/plone/plone.app.dexterity/trunk/

z3c.formwidget.query              = svn svn://svn.zope.org/repos/main/z3c.formwidget.query/trunk
plone.app.vocabularies            = svn https://svn.plone.org/svn/plone/plone.app.vocabularies/trunk
plone.app.z3cform                 = svn https://svn.plone.org/svn/plone/plone.app.z3cform/trunk

# custom versions of some packages
plone.app.controlpanel            = svn https://svn.plone.org/svn/plone/plone.app.controlpanel/branches/deco-integration
plone.app.content                 = svn https://svn.plone.org/svn/plone/plone.app.content/branches/deco-integration
plone.app.contentrules            = svn https://svn.plone.org/svn/plone/plone.app.contentrules/branches/deco-integration

[test]
recipe = zc.recipe.testrunner
eggs =
    plone.app.tinymce

    plone.formwidget.layout
    plone.formwidget.querystring
    plone.app.layoutbehavior
    plone.app.deco

    plone.app.drafts

    plone.tiles [test]
    plone.directives.tiles
    plone.app.tiles
    plone.app.standardtiles [test]

    plone.app.page

    plone.transformchain
    plone.app.blocks

    plone.app.controlpanel
    plone.app.content
    plone.app.contentrules

    plone.app.contentlisting


[xmltest]
recipe = collective.xmltestreport
eggs = 
    ${test:eggs}
extra-paths = ${instance:location}/lib/python
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']

[coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ./bin/test --coverage ../../coverage -v --auto-progress "$@"
output = ${buildout:directory}/bin/coverage
mode = 755

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml == ${versions:lxml}

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy
